public int main() {
    int[] a;
    int[] b;
    int c=100;
    class c1 t;
    class c1 t2;
    t=new c1();
    t2=new c1();
    t2.a[0]=30;
    a=new int[10];
    b=new int[10];
    b[0]=30;
    a[0]=0;
    b[1]=0;
    while (b[1]-101){
        b[1]=b[1]+1;
        while (t.m1(a,b[0])+t.m2()+t2.self()[0]+100){
            if (t.mod(b[0])){
                if (t2.mod(b[0])){
                    a[0]=a[0]+b[0]*b[1];
                }
            }
            b[0]=b[0]-1;
        }
    }
    return b[0];
}
// 10 ~ -35
public class c1 {
    int[] a = {50, 20, 10};
    public int m1(int[] a, int b) {
        return length(a) + b * 2 + this.a[1];
    }
    public int m2() {
        return this.a[2]; // 20
    }
    public int[] self() {
        return this.a;
    }
    public int mod(int x){
        return x-x/2*2;
    }
}

public class c2 extends c1 {
    int b = 100;
    public int m2() {
        return this.a[0] - this.b; // 50 - 45 = 5
    }
    public int[] self() {
        this.b=this.b-1;
        this.a[0]=this.b;
        return this.a;
    }
    public int mod(int x){
        return x-x/3*3;
    }
}